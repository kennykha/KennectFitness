{"ast":null,"code":"var _jsxFileName = \"/Users/kasperkuo/Desktop/KennectFitness/frontend/src/components/addWorkout/modal.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport DateForm from \"./dateForm\";\nimport SetsForm from \"./setsForm\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddWorkoutModal = ({\n  user\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [data, setData] = useState([{\n    date: \"\",\n    sets: [\"\"]\n  }]);\n\n  const handleNameChange = e => setName(e.target.value);\n\n  const handleDataChange = (e, idx) => {\n    if (e.target.id === \"Date\") {\n      const updateDate = data.map((record, recordIdx) => {\n        if (recordIdx === idx) {\n          return { ...record,\n            date: e.target.value\n          };\n        } else {\n          return record;\n        }\n      });\n      setData(updateDate);\n    }\n\n    if (e.target.className === \"Set\") {\n      const updateSet = data.map((record, recordIdx) => {\n        if (recordIdx === idx) {\n          const updateSetRecord = record.sets.map((set, setIdx) => {\n            if (setIdx === Number(e.target.id)) {\n              return e.target.value;\n            } else {\n              return set;\n            } // Should return updateSetRecord = ['5x10']\n\n          });\n          return { ...record,\n            sets: updateSetRecord\n          }; // Should return {date: \"\", sets:['5x10']}\n        } else {\n          return record;\n        }\n      });\n      setData(updateSet);\n    }\n  };\n\n  const handleDateAddition = () => {\n    const currentState = [...data, {\n      date: \"\",\n      sets: [\"\"]\n    }];\n    setData(currentState);\n  };\n\n  const handleDateDeletion = idx => {\n    const deleteData = data.filter((record, recordIdx) => {\n      return recordIdx !== idx;\n    });\n    setData(deleteData);\n  };\n\n  const handleSetAddition = idx => {\n    const addSet = data.map((record, recordIdx) => {\n      if (recordIdx === idx) {\n        return { ...record,\n          sets: [...record.sets, \"\"]\n        };\n      } else {\n        return record;\n      }\n    });\n    setData(addSet);\n  };\n\n  const handleModalClose = () => {\n    const modal = document.getElementById(\"workoutModal\");\n    modal.style.display = \"none\";\n    setData([{\n      date: \"\",\n      sets: [\"\"]\n    }]);\n  };\n\n  const handleSubmit = e => {\n    // e.preventDefault();\n    // console.log(user, name, data);\n    // Determine longest set and fill others will null\n    let longestSet = 0;\n    data.forEach(record => {\n      if (record.sets.length > longestSet) {\n        longestSet = record.sets.length;\n      }\n    });\n    const setDataPlaceholder = data.map(record => {\n      record.sets = record.sets.map(set => {\n        if (set === \"\") {\n          return \"   \";\n        } else {\n          return set;\n        }\n      });\n\n      if (record.date === \"\") {\n        record.date = \"   \";\n      }\n\n      while (record.sets.length !== longestSet) {\n        record.sets.push(\"   \");\n      }\n\n      return record;\n    });\n    setData(setDataPlaceholder);\n    console.log(\"Longest set\", longestSet);\n    axios.post(\"/addWorkoutData\", {\n      user: user,\n      workoutData: {\n        workoutName: name,\n        data: data\n      }\n    }).then(success => handleModalClose()).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    id: \"workoutModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataCard\",\n      id: \"workoutModalContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: handleModalClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: handleNameChange,\n          placeholder: \"Workout Name\",\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), data.map(({\n          date,\n          sets\n        }, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-rep-container\",\n            children: [/*#__PURE__*/_jsxDEV(DateForm, {\n              date: date,\n              onChange: e => handleDataChange(e, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SetsForm, {\n              sets: sets,\n              onChange: e => handleDataChange(e, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleSetAddition(idx),\n              children: \"Add Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDateDeletion(idx),\n              children: \"Delete Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDateAddition,\n          children: \"Add Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddWorkoutModal, \"WQPDva8kMHfPjfx87SoNaFR3EW4=\");\n\n_c = AddWorkoutModal;\nexport default AddWorkoutModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWorkoutModal\");","map":{"version":3,"sources":["/Users/kasperkuo/Desktop/KennectFitness/frontend/src/components/addWorkout/modal.js"],"names":["useState","DateForm","SetsForm","axios","AddWorkoutModal","user","name","setName","data","setData","date","sets","handleNameChange","e","target","value","handleDataChange","idx","id","updateDate","map","record","recordIdx","className","updateSet","updateSetRecord","set","setIdx","Number","handleDateAddition","currentState","handleDateDeletion","deleteData","filter","handleSetAddition","addSet","handleModalClose","modal","document","getElementById","style","display","handleSubmit","longestSet","forEach","length","setDataPlaceholder","push","console","log","post","workoutData","workoutName","then","success","catch","err"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport DateForm from \"./dateForm\";\nimport SetsForm from \"./setsForm\";\nimport axios from \"axios\";\n\nconst AddWorkoutModal = ({ user }) => {\n  const [name, setName] = useState(\"\");\n  const [data, setData] = useState([\n    {\n      date: \"\",\n      sets: [\"\"],\n    },\n  ]);\n\n  const handleNameChange = (e) => setName(e.target.value);\n  const handleDataChange = (e, idx) => {\n    if (e.target.id === \"Date\") {\n      const updateDate = data.map((record, recordIdx) => {\n        if (recordIdx === idx) {\n          return { ...record, date: e.target.value };\n        } else {\n          return record;\n        }\n      });\n      setData(updateDate);\n    }\n\n    if (e.target.className === \"Set\") {\n      const updateSet = data.map((record, recordIdx) => {\n        if (recordIdx === idx) {\n          const updateSetRecord = record.sets.map((set, setIdx) => {\n            if (setIdx === Number(e.target.id)) {\n              return e.target.value;\n            } else {\n              return set;\n            }\n            // Should return updateSetRecord = ['5x10']\n          });\n          return { ...record, sets: updateSetRecord };\n          // Should return {date: \"\", sets:['5x10']}\n        } else {\n          return record;\n        }\n      });\n      setData(updateSet);\n    }\n  };\n  const handleDateAddition = () => {\n    const currentState = [\n      ...data,\n      {\n        date: \"\",\n        sets: [\"\"],\n      },\n    ];\n    setData(currentState);\n  };\n\n  const handleDateDeletion = (idx) => {\n    const deleteData = data.filter((record, recordIdx) => {\n      return recordIdx !== idx;\n    });\n\n    setData(deleteData);\n  };\n\n  const handleSetAddition = (idx) => {\n    const addSet = data.map((record, recordIdx) => {\n      if (recordIdx === idx) {\n        return { ...record, sets: [...record.sets, \"\"] };\n      } else {\n        return record;\n      }\n    });\n    setData(addSet);\n  };\n\n  const handleModalClose = () => {\n    const modal = document.getElementById(\"workoutModal\");\n    modal.style.display = \"none\";\n\n    setData([\n      {\n        date: \"\",\n        sets: [\"\"],\n      },\n    ]);\n  };\n\n  const handleSubmit = (e) => {\n    // e.preventDefault();\n    // console.log(user, name, data);\n\n    // Determine longest set and fill others will null\n    let longestSet = 0;\n    data.forEach((record) => {\n      if (record.sets.length > longestSet) {\n        longestSet = record.sets.length;\n      }\n    });\n\n    const setDataPlaceholder = data.map((record) => {\n      record.sets = record.sets.map((set) => {\n        if (set === \"\") {\n          return \"   \";\n        } else {\n          return set;\n        }\n      });\n\n      if (record.date === \"\") {\n        record.date = \"   \";\n      }\n\n      while (record.sets.length !== longestSet) {\n        record.sets.push(\"   \");\n      }\n\n      return record;\n    });\n\n    setData(setDataPlaceholder);\n\n    console.log(\"Longest set\", longestSet);\n    axios\n      .post(\"/addWorkoutData\", {\n        user: user,\n        workoutData: {\n          workoutName: name,\n          data: data,\n        },\n      })\n      .then((success) => handleModalClose())\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"modal\" id=\"workoutModal\">\n      <div className=\"dataCard\" id=\"workoutModalContent\">\n        <span className=\"close\" onClick={handleModalClose}>\n          &times;\n        </span>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleNameChange}\n            placeholder=\"Workout Name\"\n            value={name}\n          />\n\n          {data.map(({ date, sets }, idx) => {\n            return (\n              <div key={idx} className=\"date-rep-container\">\n                <DateForm\n                  date={date}\n                  onChange={(e) => handleDataChange(e, idx)}\n                />\n                <SetsForm\n                  sets={sets}\n                  onChange={(e) => handleDataChange(e, idx)}\n                />\n                <button type=\"button\" onClick={() => handleSetAddition(idx)}>\n                  Add Set\n                </button>\n                <button type=\"button\" onClick={() => handleDateDeletion(idx)}>\n                  Delete Date\n                </button>\n              </div>\n            );\n          })}\n\n          <button type=\"button\" onClick={handleDateAddition}>\n            Add Date\n          </button>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddWorkoutModal;\n"]},"metadata":{},"sourceType":"module"}